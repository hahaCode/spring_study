<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>

    <!--通过properties标签加载外部properties文件-->
    <properties resource="jdbc.properties"></properties>

    <!--自定义别名 注意顺序, typeAliases标签不能写在后面-->
    <typeAliases>
        <typeAlias type="com.fan.mybatisStudy.domain.User" alias="user"/>
        <typeAlias type="java.lang.Integer" alias="int"/> <!--其实这个别名mybatis已经帮我们定义好了-->
    </typeAliases>

<!--    &lt;!&ndash;注册类型处理器&ndash;&gt;-->
<!--    <typeHandlers>-->
<!--        <typeHandler handler="com.fan.mybatisStudy.handler.DateTypeHandler"/>-->
<!--    </typeHandlers>-->

    <!--配置分页助手插件-->
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor"/>
    </plugins>
    
    <!--配置数据源环境-->
    <environments default="dev">
        <environment id="dev">
            <!--
                这里事务管理器有两种类型
                1.JDBC: 使用JDBC的提交和回滚设置, 它依赖于从数据源得到的连接来管理事务作用域
                2.MANAGED: 这个配置基本没做什么事 很少用
            -->
            <transactionManager type="JDBC"></transactionManager>

            <!--
                数据源的类型有三种
                1.UNPOOLED: 每次被请求时打开和关闭连接
                2.POOLED: 利用"池"的概念将JDBC连接对象组织起来
                3.JNDI: 这个数据源的实现是为了能在如EJB或应用服务器这类容器中使用, 容器可以集中或在外部配置数据源, 然后放置一个JNDI上下文的引用
            -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--加载映射文件-->
    <mappers>
        <mapper resource="com/fan/mybatisStudy/mapper/UserMapper.xml"/>
    </mappers>

</configuration>